apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lighthouse-ci.fullname" . }}
  labels:
    {{- include "lighthouse-ci.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "lighthouse-ci.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lighthouse-ci.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "lighthouse-ci.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: lighthouse-ci
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LHCI_LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            {{- if and .Values.basicAuthUsername .Values.basicAuthPassword }}
            - name: LHCI_BASIC_AUTH__USERNAME
              value: {{ .Values.basicAuthUsername | quote }}
            - name: LHCI_BASIC_AUTH__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "lighthouse-ci.secretName" . }}
                  key: basic-auth-password
            {{- end }}
            {{- with .Values.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 9001
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /version
              port: http
              {{- if and .Values.basicAuthUsername .Values.basicAuthPassword }}
              httpHeaders:
                - name: Authorization
                  value: {{ include "lighthouse-ci.basicAuthHttpHeader" . }}
              {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /version
              port: http
              {{- if and .Values.basicAuthUsername .Values.basicAuthPassword }}
              httpHeaders:
                - name: Authorization
                  value: {{ include "lighthouse-ci.basicAuthHttpHeader" . }}
              {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ default (include "lighthouse-ci.fullname" .) .Values.persistence.existingClaim }}
          {{- else }}
          emptyDir: {}
          {{- end }}
