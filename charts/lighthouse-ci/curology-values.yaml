# Default values for lighthouse-ci.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Override Kubernetes version
kubeVersion: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Annotations to add to all deployed objects
commonAnnotations: {}

# Labels to add to all deployed objects
commonLabels: {}

replicaCount: 1

image:
  repository: patrickhulce/lhci-server
  tag: 0.8.1
  pullPolicy: IfNotPresent

pdb:
  # Specifies whether a pod disruption budget should be created
  create: false

  # Minimum number/percentage of pods that should remain scheduled
  minAvailable: 1

  # Maximum number/percentage of pods that may be made unavailable
  # maxUnavailable: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

# Additional pod annotations
podAnnotations: {}

# Additional pod labels
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

# Priority class name
# priorityClassName : high-priority

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

livenessProbe:
  # Enable liveness probe
  enabled: true

  # Delay before the liveness probe is initiated
  initialDelaySeconds: 0

  # How often to perform the liveness probe
  periodSeconds: 10

  # When the liveness probe times out
  timeoutSeconds: 1

  # Minimum consecutive failures for the liveness probe to be considered failed after having succeeded
  failureThreshold: 3

  # Minimum consecutive successes for the liveness probe to be considered successful after having failed
  successThreshold: 1

readinessProbe:
  # Enable readiness probe
  enabled: true

  # Delay before the readiness probe is initiated
  initialDelaySeconds: 0

  # How often to perform the readiness probe
  periodSeconds: 10

  # When the readiness probe times out
  timeoutSeconds: 1

  # Minimum consecutive failures for the readiness probe to be considered failed after having succeeded
  failureThreshold: 3

  # Minimum consecutive successes for the readiness probe to be considered successful after having failed
  successThreshold: 1

service:
  # Service annotations
  annotations: {}

  # Service type
  type: ClusterIP

  # Static cluster IP address or None for headless service when service type is ClusterIP
  # clusterIP: 10.43.0.100

  # Static load balancer IP address when service type is LoadBalancer
  # loadBalancerIP: 10.0.0.100

  # Source IP address ranges when service type is LoadBalancer
  # loadBalancerSourceRanges:
  #   - 10.0.0.0/24

  # External traffic routing policy when service type is LoadBalancer or NodePort
  externalTrafficPolicy: Cluster

  # Service port
  port: 9001

  # Service node port when service type is LoadBalancer or NodePort
  # nodePort: 30000

ingress:
  enabled: true

  # IngressClass that will be be used to implement the Ingress
  ingressClassName: "alb"

  # Ingress path type
  pathType: ImplementationSpecific

  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:217579921979:certificate/9916d9ad-52fa-4813-bb4e-47c9f4be5ddf
    alb.ingress.kubernetes.io/inbound-cidrs: "173.245.48.0/20,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22" # Cloudflare ips
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "60"
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=120
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=5
    alb.ingress.kubernetes.io/success-codes: "200"

  hosts:
    - host: lhci.curology.in
      paths:
        - /*
  tls: []
  #  - secretName: lighthouse-ci-tls
  #    hosts:
  #      - lighthouse-ci.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Additional container environment variables
extraEnvVars: []
#  - name: MY-NAME
#    value: "MY-VALUE"

# Name of existing ConfigMap containing additional container environment variables
extraEnvVarsCM:

# Name of existing Secret containing additional container environment variables
extraEnvVarsSecret:

persistence:
  # Enable persistence using PVC
  enabled: false

  # Name of an existing PVC to use
  # existingClaim: my-pvc

  # PVC access mode
  accessMode: ReadWriteOnce

  # PVC annotations
  annotations: {}

  # PVC size
  size: 1Gi

  # PVC storage class
  # storageClass: -

# Log level
logLevel: verbose

# The username to protect the server with HTTP Basic Authentication
basicAuthUsername: ""

# The password to protect the server with HTTP Basic Authentication
basicAuthPassword: ""

# Name of existing Secret to use
existingSecret: ""

# Name of the key in existing Secret that contains HTTP Basic Authentication password
existingSecretKeyBasicAuthPassword: basic-auth-password

# The configuration to automatically collect results using the PageSpeed Insights API
psiCollectCron:
  # The API key to use with the PageSpeed Insights API
  psiApiKey: ""

  # The array of sites to collect results for
  sites: []
    # - urls:
    #     - http://example.local/
    #   schedule: 0 * * * *
    #   projectSlug: example

# The configuration to automatically delete old records
deleteOldBuildsCron: []
  # - schedule: 0 * * * *
  #   maxAgeInDays: 30

mariadb:
  # Whether to use the MariaDB chart
  enabled: false

  # MariaDB architecture
  architecture: standalone

  auth:
    # MariaDB database
    database: lighthouse-ci

    # MariaDB user
    username: lighthouse-ci

    # MariaDB password
    password: lighthouse-ci

    # Name of existing Secret to use
    existingSecret: ""

  primary:
    service:
      # MariaDB port
      port: 3306

externalMariadb:
  # Whether to use an external MariaDB
  enabled: true

  # External MariaDB host
  host: lighthouse-ci.cguserojko63.us-east-1.rds.amazonaws.com

  # External MariaDB port
  port: 3306

  # External MariaDB user
  username: lighthouse_ci

  # External MariaDB password
  password: lighthouse-ci

  # Name of existing Secret to use
  existingSecret: ""

  # Name of the key in existing Secret that contains MariaDB password
  existingSecretKeyPassword: mariadb-password

  # External MariaDB database
  database: lighthouse_ci

postgresql:
  # Whether to use the PostgreSQL chart
  enabled: false

  # PostgreSQL user
  postgresqlUsername: lighthouse-ci

  # PostgreSQL password
  postgresqlPassword: lighthouse-ci

  # Name of existing Secret to use
  existingSecret: ""

  # PostgreSQL database
  postgresqlDatabase: lighthouse-ci

  service:
    # PostgreSQL port
    port: 5432

externalPostgresql:
  # Whether to use an external PostgreSQL
  enabled: false

  # External PostgreSQL host
  host: postgresql

  # External PostgreSQL port
  port: 5432

  # External PostgreSQL user
  username: lighthouse-ci

  # External PostgreSQL password
  password: lighthouse-ci

  # Name of existing Secret to use
  existingSecret: ""

  # Name of the key in existing Secret that contains PostgreSQL password
  existingSecretKeyPassword: postgresql-password

  # External PostgreSQL database
  database: lighthouse-ci

tests:
  image:
    # Image name
    repository: ghcr.io/cowboysysop/pytest

    # Image tag
    tag: 1.0.0

    # Image pull policy
    pullPolicy: IfNotPresent
